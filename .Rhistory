name = "dec/pl",
vintage = 2020,
region = "block:*",
regionin = "state:06+county:075",
vars = "P1_001N"
) %>%
transmute(
block =
paste0(state,county,tract,block),
pop = P1_001N
)
smc_pop_2020_original <-
getCensus(
name = "dec/pl",
vintage = 2020,
region = "block:*",
regionin = "state:06+county:075",
vars = "P1_001N"
)
smc_pop_race_2020 <-
getCensus(
name = "dec/pl",
vintage = 2020,
region = "block:*",
regionin = "state:06+county:075",
vars = "group(P1)"
) %>%
mutate(
block =
paste0(state,county,tract,block)
) %>%
select(!c(GEO_ID,state,county,tract,NAME) & !ends_with(c("NA"))) %>%
pivot_longer(
ends_with("N"),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
dec_vars_2020 %>%
select(name, label)
) %>%
select(-name) %>%
separate(
label,
into = c(NA,NA,NA,"race"),
sep = "!!"
)
smc_pop_race_2020 <- smc_pop_race_2020 %>%
filter(
race %in% c("White alone", "Black or African American alone", "American Indian and Alaska Native alone", "Asian alone")
)
blocks_2020 <- blocks("CA", "San Francisco", year = 2020, progress_bar = F)
nfo_boundary <- places("CA", progress_bar = F) %>%
filter(NAME == "San Francisco")
smc_pop_race_2020 <- smc_pop_race_2020 %>%
left_join(blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf() %>%
st_centroid() %>%
.[nfo_boundary, ] %>%
st_drop_geometry() %>%
left_join(blocks_2020 %>% select(block = GEOID20)) %>%
st_as_sf()
smc_pop_filtered <- smc_pop_race_2020 %>%
st_centroid() %>%
.[police_filtered, ]
smc_pop_filtered %>%
group_by(estimate, race) %>%
summarize(estimate = sum(estimate)) %>%
ggplot() +
geom_bar(
aes(
x = race,
y = estimate,
fill = race
),
stat = "identity",
position = "stack"
) +
labs(
x = "Household income",
y = "Number of people ",
title = "Demographics of people that live close to a police station",
fill = "Race of householder"
)
smc_pop_filtered %>%
group_by(estimate, race) %>%
summarize(estimate = sum(estimate)) %>%
ggplot() +
geom_bar(
aes(
x = race,
y = estimate,
fill = race
),
stat = "identity",
position = "stack"
) +
labs(
x = "Household income",
y = "Number of people ",
title = "Demographics of people that live close to a police station",
fill = "Race of householder"
) +
coord_flip()
smc_pop_filtered %>%
group_by(estimate, race) %>%
summarize(estimate = sum(estimate)) %>%
ggplot() +
geom_bar(
aes(
x = race,
y = estimate,
fill = race
),
stat = "identity",
position = "stack"
) +
labs(
x = "Household income",
y = "Number of people ",
title = "Demographics of people that live close to a police station",
fill = "Race of householder"
) +
coord_flip() +
theme(
legend.position = "bottom",
legend.direction = "vertical"
)  +
guides(
fill = guide_legend(
reverse = T
)
)
View(smc_pop_race_2020)
View(combined)
combined <- left_join(police_filtered, smc_pop_race_2020, by = c("GEOID")) %>%
group_by(sex, age)
combined_test <- combined %>%
group_by(sex, age) %>%
summarize(estimate = sum(estimate))
View(combined_test)
mapview(combined_test)
combined_test <- combined %>%
group_by(GEOID,sex, age) %>%
summarize(estimate = sum(estimate))
mapview(combined_test)
combined_test <- combined %>%
group_by(GEOID,sex) %>%
summarize(estimate = sum(estimate))
mapview(combined_test)
combined_test <- combined %>%
group_by(GEOID, age) %>%
summarize(estimate = sum(estimate))
mapview(combined_test)
perc_of_people <-
combined %>%
mutate(
young =
ifelse(
age %in% c(
"18 and 19 years",
"20 years",
"21",
"22 to 24 years"
),
estimate,
NA
)
) %>%
group_by(GEOID) %>%
summarize(
young = sum(young, na.rm = T),
total_pop = sum(estimate, na.rm = T)
) %>%
mutate(
between_18_and_24 = young/total_pop*100
) %>%
filter(!is.na(between_18_and_24))
mapview(perc_of_people, zcol = "between_18_and_24")
census_race_categories <-
c(
"White Alone",
"Black or African American",
"American Indian and Alaska Native Alone",
"Asian Alone",
"Native Hawaiian and Other Pacific Islander Alone",
"Some Other Race Alone",
"Two or More Races"
)
bay_income_race <-
1:7 %>%
map_dfr(function(x){
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group: *",
regionin = "state:06+county:075",
vars = paste0("group(B01001",LETTERS[x],")")
) %>%
select(!c(GEO_ID,state,NAME) & !ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
) %>%
select(-name) %>%
separate(
label,
into = c(NA,NA,"income"),
sep = "!!"
) %>%
filter(!is.na(income)) %>%
mutate(race = census_race_categories[x])
})
View(bay_income_race)
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group: *",
regionin = "state:06+county:075",
vars = paste0("group(B19001",LETTERS[x],")")
) %>%
select(!c(GEO_ID,state,NAME) & !ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
) %>%
select(-name) %>%
separate(
label,
into = c(NA,NA,"income"),
sep = "!!"
) %>%
filter(!is.na(income)) %>%
mutate(race = census_race_categories[x])
census_race_categories <-
c(
"White Alone",
"Black or African American",
"American Indian and Alaska Native Alone",
"Asian Alone",
"Native Hawaiian and Other Pacific Islander Alone",
"Some Other Race Alone",
"Two or More Races"
)
bay_income_race <-
1:7 %>%
map_dfr(function(x){
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group: *",
regionin = "state:06+county:075",
vars = paste0("group(B19001",LETTERS[x],")")
) %>%
select(!c(GEO_ID,state,NAME) & !ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
) %>%
select(-name) %>%
separate(
label,
into = c(NA,NA,"income"),
sep = "!!"
) %>%
filter(!is.na(income)) %>%
mutate(race = census_race_categories[x])
})
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "county:075",
regionin = "state:06",
vars = paste0("group(B19001",LETTERS[x],")")
) %>%
select(!c(state,NAME) & !ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
) %>%
select(-name) %>%
separate(
label,
into = c(NA,NA,"income"),
sep = "!!"
) %>%
filter(!is.na(income)) %>%
mutate(race = census_race_categories[x])
census_race_categories <-
c(
"White Alone",
"Black or African American",
"American Indian and Alaska Native Alone",
"Asian Alone",
"Native Hawaiian and Other Pacific Islander Alone",
"Some Other Race Alone",
"Two or More Races"
)
bay_income_race <-
1:7 %>%
map_dfr(function(x){
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "county:075",
regionin = "state:06",
vars = paste0("group(B19001",LETTERS[x],")")
) %>%
select(!c(state,NAME) & !ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
) %>%
select(-name) %>%
separate(
label,
into = c(NA,NA,"income"),
sep = "!!"
) %>%
filter(!is.na(income)) %>%
mutate(race = census_race_categories[x])
})
View(smc_pop_race_2020)
Sys.setenv(CENSUS_KEY="c8aa67e4086b4b5ce3a8717f59faa9a28f611dab")
acs_vars_2019_5yr <-
listCensusMetadata(
name = "2019/acs/acs5",
type = "variables"
)
View(smc_pop_race_2020)
dec_vars_2020 <-
listCensusMetadata(
name = "2020/dec/pl",
type = "variables"
)
smc_pop_race_2020 <-
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "block group: *",
regionin = "state:06+county:075",
vars = "group(B01001)"
) %>%
mutate(
GEOID =
paste0(state,county,tract,block_group)
) %>%
select(!c(GEO_ID,state,county,tract,block_group,NAME) & !ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "variable",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label),
by = c("variable" = "name")
) %>%
select(-variable) %>%
separate(
label,
into = c(NA,NA,"sex","age"),
sep = "!!"
) %>%
filter(!is.na(age))
View(police_filtered)
bay_income_race <- left_join(police_filtered, bay_income_race, by = c("GEOID"))
census_race_categories <-
c(
"White Alone",
"Black or African American",
"American Indian and Alaska Native Alone",
"Asian Alone",
"Native Hawaiian and Other Pacific Islander Alone",
"Some Other Race Alone",
"Two or More Races"
)
bay_income_race <-
1:7 %>%
map_dfr(function(x){
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "county:075",
regionin = "state:06",
vars = paste0("group(B19001",LETTERS[x],")")%>%
mutate(
GEOID =
paste0(state,county,tract,block_group)
) %>%
select(!c(GEO_ID,state,county,tract,block_group,NAME) %>%
pivot_longer(
ends_with("E"),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
) %>%
select(-name) %>%
separate(
label,
into = c(NA,NA,"income"),
sep = "!!"
) %>%
filter(!is.na(income)) %>%
mutate(race = census_race_categories[x])
})
%>%
paste0(state,county,tract,block_group)%>%
paste0(state,county,tract,block_group) %>%
getCensus(
name = "acs/acs5",
vintage = 2019,
region = "county:075",
regionin = "state:06",
vars = paste0("group(B19001",LETTERS[x],")") %>%
mutate(
GEOID =
paste0(state,county,tract,block_group)
)%>%
select(!c(GEO_ID,state,county,tract,block_group,NAME) %>%
pivot_longer(
ends_with("E"),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
) %>%
select(-name) %>%
separate(
label,
into = c(NA,NA,"income"),
sep = "!!"
) %>%
filter(!is.na(income)) %>%
mutate(race = census_race_categories[x])
})
)
census_race_categories <-
c(
"White Alone",
"Black or African American",
"American Indian and Alaska Native Alone",
"Asian Alone",
"Native Hawaiian and Other Pacific Islander Alone",
"Some Other Race Alone",
"Two or More Races"
)
bay_income_race <-
1:7 %>%
map_dfr(function(x){
getCensus(
name = "acs/acs5",
vintage = 2019,
region =  "block group: *",
regionin = "state:06+county:075",
vars = paste0("group(B19001",LETTERS[x],")")
) %>%
mutate(
GEOID =
paste0(state,county,tract,block_group)
) %>%
select(!c(GEO_ID,state,county,tract,block_group,NAME) &
!ends_with(c("EA","MA","M"))) %>%
pivot_longer(
ends_with("E"),
names_to = "name",
values_to = "estimate"
) %>%
left_join(
acs_vars_2019_5yr %>%
select(name, label)
) %>%
select(-name) %>%
separate(
label,
into = c(NA,NA,"income"),
sep = "!!"
) %>%
filter(!is.na(income)) %>%
mutate(race = census_race_categories[x])
})
View(bay_income_race)
